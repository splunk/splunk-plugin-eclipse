--- Q7 testcase ---
Format-Version: 1.0
Q7-vendor: www.xored.com/q7
Contexts: _TwP1gNISEeK_QsHHknmtsA,_QI0IoNK-EeK_QsHHknmtsA
Element-Name: CreateSplunkSDKProjectWithJavaUtilLoggingSupport
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _eLxwwYO9EeOOV9MKpCmi_Q
Q7-Runtime-Version: 1.3.9.201310250528
Save-Time: 4/21/14 3:55 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

get-menu "File/New/Other..." | click
with [get-window New] {
    get-tree | select "Splunk/Splunk SDK for Java project"
    get-button "Next >" | click
}
with [get-window -class WizardDialog] {
    get-editbox -after [get-label "Project name:"] | set-text CreateSplunkSDKProjectWithJavaUtilLoggingSupport
    get-group "Add support for logging libraries" | get-button "Add logging support:" | check
    get-button "java.util.logging" | click    
    get-button "Next >" | click
    get-button Finish | click
}

with [get-view "Project Explorer" | get-tree] {
    select "CreateSplunkSDKProjectWithJavaUtilLoggingSupport/lib/slf4j-jdk14-1.6.4.jar" | double-click
    select "CreateSplunkSDKProjectWithJavaUtilLoggingSupport/lib/slf4j-api-1.6.4.jar" | double-click
    select "CreateSplunkSDKProjectWithJavaUtilLoggingSupport/lib/splunk-library-javalogging.jar" | double-click
    select "CreateSplunkSDKProjectWithJavaUtilLoggingSupport/lib/commons-lang-2.4.jar" | double-click 
    select "CreateSplunkSDKProjectWithJavaUtilLoggingSupport/jdklogging.properties" | double-click 
}

get-view "Project Explorer" | get-tree 
    | select "CreateSplunkSDKProjectWithJavaUtilLoggingSupport/src/\\(default package\\)/Program.java" | double-click
with [get-editor "Program.java" | get-text-viewer] {
    set-caret-pos 1 4
    key-type "M1+a"
    key-type "M1+x"
    key-type "M1+a"
    key-type "M1+x"
    set-caret-pos 1 1
      
  set-text "import java.io.IOException;\n"+
"import org.slf4j.*;\n"+
"import java.io.InputStream;\n"+
"import com.splunk.Args;\n"+
"import com.splunk.Event;\n"+
"import com.splunk.InputCollection;\n"+
"import com.splunk.InputKind;\n"+
"import com.splunk.ResultsReaderXml;\n"+
"import com.splunk.Service;\n"+
"import com.splunk.ServiceArgs;\n"+
"import com.splunk.TcpInput;\n"+
"\n"+
"public class Program {\n"+
"	public static void main(String[] args) {\n"+
"		ServiceArgs serviceArgs = new ServiceArgs();\n"+
"		serviceArgs.setUsername(\"admin\");\n"+
"		serviceArgs.setPassword(\"changeme\");\n"+
"		serviceArgs.setHost(\"localhost\");\n"+
"		serviceArgs.setPort(8089);\n"+
"		Service service = Service.connect(serviceArgs);	\n"+
"		\n"+
"		Args oneshotSearchArgs  = new Args();\n"+
"		oneshotSearchArgs.put(\"owner\", \"admin\");\n"+
"		oneshotSearchArgs.put(\"app\", \"search\");\n"+
"\n"+
"		String tcpPort = \"5150\";\n"+
"		InputCollection inputs = service.getInputs(oneshotSearchArgs);\n"+
"		TcpInput tcpInput = (TcpInput) inputs.get(tcpPort);\n"+
"		\n"+
"		if(tcpInput!=null){\n"+
"			// remove TCP input\n"+
"			tcpInput.remove();\n"+
"			inputs.refresh();		\n"+
"		}\n"+
"		\n"+
"		inputs.create(tcpPort, InputKind.Tcp);\n"+
"		tcpInput = (TcpInput) inputs.get(tcpPort);\n"+
"		tcpInput.update();\n"+
"		\n"+
"//		Logger logger=LoggerFactory.getLogger(\"splunk.logger\");\n"+
"//		logger.trace(\"field=newLoggerTrace1\");\n"+
"//		logger.trace(\"field=newLoggerTrace2\");\n"+
"//		logger.trace(\"field=newLoggerTrace3\");\n"+
"//		\n"+
"//		InputStream resultsStream = service.oneshotSearch(\"search field=newLoggerTrace* | head 5\",\n"+
"//				oneshotSearchArgs);\n"+
"//\n"+
"//		try {\n"+
"//			ResultsReaderXml resultsReader = new ResultsReaderXml(resultsStream);\n"+
"//\n"+
"//			for (Event event : resultsReader) {\n"+
"//				// Process each event\n"+
"//				for (String key: event.keySet()) {\n"+
"//				   System.out.println(key + \": \" + event.get(key));\n"+
"//				}\n"+
"//				System.out.println(\"\");\n"+
"//			}\n"+
"//\n"+
"//			resultsReader.close();\n"+
"//		} catch (IOException e) {\n"+
"//			e.printStackTrace();\n"+
"//		}	\n"+
"		\n"+
"		// remove TCP input\n"+
"		tcpInput.remove();\n"+
"		inputs.refresh();		\n"+
"		\n"+
"		System.out.println(\"CreateSplunkSDKProjectWithJavaUtilLoggingSupport Test Pass!\");\n"+
"	}\n"+
"}\n"

key-type "M1+s"
}
  
get-menu "Run/Run Configurations..." | click
with [get-window "Run Configurations"] {
    get-tree | select "Java Application" | get-menu New | click
    get-button Run | click
}
get-view Console | get-text-viewer | get-property text | equals "CreateSplunkSDKProjectWithJavaUtilLoggingSupport Test Pass!" | verify-true
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
